Using make_const_string instead of make_malloced_string
makes a copy of an already malloced string each time,
but using make_malloced_string on the same char* 
will result in a double free, because it essentially tells
gawk to handle the freeing of the same char* a second time by
assigning that char* to a variable within a gawk program,
which then means we have no control over freeing the value.
The solution to this is to use value cookies, which store
a cached value such as a string, for multiple variables to
use, and which gawk knows to free seperately and only once.
However, these would also cost more memory to store, partially
for the gawk_value_cookie_t struct, but also because we would
have to track what values have already been instantiated using
yet another associative data structure. In the case where a
gawk program rarely uses the same value for the given 
variables within the program, this may actually waste more
memory than simply using make_const_string.
